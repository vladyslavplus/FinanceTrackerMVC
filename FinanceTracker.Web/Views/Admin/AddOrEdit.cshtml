@model FinanceTracker.Web.ViewModels.AddOrEditUserViewModel

@{
    ViewData["PageTitle"] = Model.Id == null ? "Add a new user" : "Edit user";
}

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<div class="row">
    <div class="col-md-7">
        <div class="widget p-5" style="background-color:#212b36">
            <form id="user-form" asp-action="AddOrEdit" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <input type="hidden" asp-for="Id" />

                <div class="mb-3">
                    <div class='e-btn-group custom-rbt-group'>
                        @foreach (var role in Model.Roles)
                        {
                            <input type="radio" id="radio_@role.Value" name="SelectedRole" value="@role.Value"
                                   checked="@(role.Value == Model.SelectedRole)" />
                            <label class="e-btn" for="radio_@role.Value">@role.Text</label>
                        }
                    </div>
                </div>

                <div class="mb-3">
                    <ejs-textbox id="username" placeholder="Username" ejs-for="UserName" floatLabelType="Always"></ejs-textbox>
                </div>

                <div class="mb-3">
                    <ejs-textbox id="email" placeholder="Email" ejs-for="Email" floatLabelType="Always"></ejs-textbox>
                </div>

                @if (string.IsNullOrEmpty(Model.Id))
                {
                    <div class="mb-3">
                        <ejs-textbox id="password" type="password" placeholder="Password" ejs-for="Password" floatLabelType="Always"></ejs-textbox>
                    </div>
                }


                <ejs-button id="submit" cssClass="e-success" content="Submit"></ejs-button>
            </form>
        </div>
    </div>
    <div class="col-md-5">
        <div class="widget h-100 d-flex justify-content-center align-items-center">
            <i class="fa-solid fa-user-edit fa-2xl"></i>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener("DOMContentLoaded", function () {
                    var options = {
            rules: {
                'UserName': { required: true },
                'Email': { required: true, email: true },
                'Password': {
                    required: @(Model.Id == null ? "true" : "false"),
                    minLength: 8,
                    regex: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Za-z\d]{8,}$/, 
                },
                'SelectedRole': { required: true }
            }
        };


            var formObject = new ej.inputs.FormValidator('#user-form', options);

            formObject.customPlacement = function (element, errorElement) {
                element.parentElement.appendChild(errorElement);
            };

            document.getElementById("submit").addEventListener('click', function (event) {
                if (!formObject.validate()) {
                    event.preventDefault();
                }
            });
        });
    </script>
}
