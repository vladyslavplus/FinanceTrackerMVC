@model FinanceTracker.Domain.Entities.Transaction

@{
	ViewData["PageTitle"] = Model.Id == 0 ? "Create a new transaction" : "Edit transaction";
}

<div class="row">
	<div class="col-md-7">
		<div class="widget p-5" style="background-color:#212b36">
			<form asp-action="AddOrEdit" id="transaction-form">
				<div asp-validation-summary="ModelOnly" class="text-danger"></div>
				<input type="hidden" name="Id" value="@Model.Id" />
				<div class="mb-3">
					<ejs-datepicker id="date" ejs-for="Date"
									placeholder="Date" floatLabelType="Always"
									format="MMM-dd-yy">
					</ejs-datepicker>
				</div>
				<div class="mb-3">
					<ejs-dropdownlist id="ddlCategory" ejs-for="CategoryId"
									  dataSource="@ViewBag.Categories" placeholder="Category"
									  floatLabelType="Always" allowFiltering="true" ignoreAccent="true"
									  filterType="Contains" popupHeight="220px">
						<e-dropdownlist-fields value="Id" text="TitleWithIcon"></e-dropdownlist-fields>
					</ejs-dropdownlist>
					<span asp-validation-for="CategoryId" class="text-danger fs-6"></span>
				</div>
				<div class="mb-3">
					<ejs-numerictextbox id="amount" ejs-for="Amount"
										placeholder="Amount" floatLabelType="Always"
										min="0" format="C2" decimals="2" step="0.01">
					</ejs-numerictextbox>
					<span asp-validation-for="Amount" class="text-danger fs-6"></span>
				</div>
				<div class="mb-3">
					<ejs-textbox id="note" placeholder="Note" ejs-for="Note" 
					floatLabelType="Always" multiline="true" cssClass="no-resize" rows="2"></ejs-textbox>
				</div>
				<ejs-button id="submit" cssClass="e-success" content="Submit"></ejs-button>
			</form>
		</div>
	</div>
	<div class="col-md-5">
		<div class="widget h-100 d-flex justify-content-center align-items-center">
			<i class="fa-solid fa-money-bill-transfer fa-2xl"></i>
		</div>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script>
		// CLIENT-VALIDATION 
		document.addEventListener("DOMContentLoaded", function () {
			var options = {
				rules: {
					'Amount': { required: true, min: 0.01 },
					'CategoryId': { required: true }
				}
			};
			
			var formObject = new ej.inputs.FormValidator('#transaction-form', options);

			formObject.customPlacement = function (element, errorElement) {
				element.parentElement.appendChild(errorElement);
			};

			document.getElementById("submit").addEventListener('click', function (event) {
				if (!formObject.validate()) {
					event.preventDefault();
				}
			});
		});
	</script>
}
